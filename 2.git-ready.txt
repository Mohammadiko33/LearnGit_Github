1. git config --global user.name "[user name]"
    معنی کلمه گلوبال میشه سراسری
    این فلگ گلوبال به این معنی هست که از این به بعد هر پروژه ای که با استفاده از دیوایس من سیستم من ساخته بشه و من از گیت برای کنترل کردن ورژن هاش استفاده بکنم گیت باید اسم منو متن داخل کوتیشن صدا بزنه
__________________________________________________________________
 2. git config --global user.email "[user email]"
    برای معرفتی ایمیل خودمون از این کامند استفاده میکنیم
__________________________________________________________________
3. Working Directory چیه ؟
    پوشه ای که ما توش فایل های پروژمون رو قرار دادیم 
    همون مسیری که ما داریم رو پروژمون کار میکنیم
__________________________________________________________________    
4. Staging Area چیه ؟
    در گیت یک مرحله میانی است که تغییرات انتخاب‌شده را قبل از کامیت نهایی ذخیره می‌کند
    ما باید فایل هامون از ورکینگ داریکتوری اضافه بکنیم به استیجین اریا
    ما سه تا محیط داریم وقتی که داریم با گیت کار میکنیم داریم از گیت برای مدیریت پروژمون استفاده میکنیم فرض بکنید که اینا سه تا محیط مختلف هستن
    ورکینگ دایرکتوری ، استیجین اریا و گیت ریپازیتوی 
    و واسه اینمه ما یم ورژن از نرم افزار یا پروژمون ثبت بکنیم منطقا اول فایل هامون رو توی ورکینگ داریکتوری ایجاد میکنیم
    مثلا یک فایل اچ تی ام ال میسازم حالا بعد از اینکه توی ورکینگ دایرکتوری فایلم رو ساختم باید اونو انتقال بدم به محیط استیج این کارو با استفاده از دستوره
    git add 
    بعد از اینکه فایل ما امد توی استیج یک کرحله دیگه وجود داره که فایلمون رو وارد ریپازیتوی گیت یا همون مخزن گیت بکنیم  با چه دستوری 
    git commit
__________________________________________________________________    
5. Git Repository چیه ؟
    یک دایرکتوری مرکزی که تمامی تاریخچه‌ی پروژه، تغییرات و شاخه‌ها را در گیت ذخیره می‌کند.
    معنی ریپازیتوی میشه مخزن 
__________________________________________________________________    
6. میتونیم ورژن های نرم افزارمون رو توی گیت ببینم و توشون سویچ کنیم
__________________________________________________________________    
7. init مخفف initilize هست
    یعنی مقدار دهی اولیه
__________________________________________________________________    
8. بعد از کامند 
    git init 
        تمامی کار هایی که گیت انجام میده توی این فولدر انجام میشه که بعد از اجرای این کامند توی ورکینگ داریکتوری ذخیره میشه و هیدن هم هست
__________________________________________________________________    
9. وقتی که ما یک فایل رو به تازگی ایجاد بکنیم یا اضافه بکنیم  توی ورکینگ دایرکتوری هست هنوز وارد استیجیگ اریا نشده هنوز توی استیجیگ اریا هست
__________________________________________________________________    
10. برای اضافه کردن فایل به 
    Staging Area
        فقط کافیه از دستور 
            git add [file name].[file format]
                استفاده بکنیم
                    یا برای راحتی کار میتونیم از بخش سمت چپ روی گزینه 
                        source control
                            کلیک بکنیم و گزینه پلاس رو کلیک بکنیم
__________________________________________________________________    
11. کامیت ها نقاط قابل بازگشت هستند یعنی میتونیم از ورژن دو پروژمون برگردیم به ورژن یک
__________________________________________________________________    
12. git commit -m "[comment for this version your project]"
    ثبت نهایی پروژه 
        -m
            مخفف مسیج یا پیام یا کامنت هست میگیم با این کامنت ورژن رو ثبت کن
__________________________________________________________________    
13. git log
    این دستور وضعیت کامیت های پروژه رو بهمون میده
__________________________________________________________________    
14. cls 
    برای پاک سازی محیط ترمینال
__________________________________________________________________    
15. M => Modified 
    به معنای تغییر یافته شده
        یعنی وقتی امده توی استیج یعنی یک تغییری توش اعمال شده
__________________________________________________________________    
16. git log --oneline
    یعنی گزارش ورژن های پروژمو توی یک خط جمع جور بده
__________________________________________________________________    
17. برای بازگشت به ورژن قبلی پروژه فقط کافیه دستور زیر رو اجرا کنید
    git checkout [id version]
__________________________________________________________________    
18. git checkout master 
    یعنی دوباره بر میگردیم به اخرین تغییرات توی پروژمون داشیم